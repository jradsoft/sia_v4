//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=4.0.30319.1.
// 


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="CFDiSoapBinding", Namespace="http://cfdi.service.ediwinws.edicom.com")]
public partial class CFDiService : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    private System.Threading.SendOrPostCallback changePasswordOperationCompleted;
    
    private System.Threading.SendOrPostCallback getCfdiOperationCompleted;
    
    private System.Threading.SendOrPostCallback getTimbreCfdiOperationCompleted;
    
    private System.Threading.SendOrPostCallback cancelaCFDiOperationCompleted;
    
    private System.Threading.SendOrPostCallback getCfdiTestOperationCompleted;
    
    private System.Threading.SendOrPostCallback getTimbreCfdiTestOperationCompleted;
    
    /// <remarks/>
    public CFDiService() {
        this.Url = "https://cfdiws.sedeb2b.com/EdiwinWS/services/CFDi";
    }
    
    /// <remarks/>
    public event changePasswordCompletedEventHandler changePasswordCompleted;
    
    /// <remarks/>
    public event getCfdiCompletedEventHandler getCfdiCompleted;
    
    /// <remarks/>
    public event getTimbreCfdiCompletedEventHandler getTimbreCfdiCompleted;
    
    /// <remarks/>
    public event cancelaCFDiCompletedEventHandler cancelaCFDiCompleted;
    
    /// <remarks/>
    public event getCfdiTestCompletedEventHandler getCfdiTestCompleted;
    
    /// <remarks/>
    public event getTimbreCfdiTestCompletedEventHandler getTimbreCfdiTestCompleted;
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://cfdi.service.ediwinws.edicom.com", ResponseNamespace="http://cfdi.service.ediwinws.edicom.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("changePasswordReturn")]
    public bool changePassword(string user, string password, string newPassword) {
        object[] results = this.Invoke("changePassword", new object[] {
                    user,
                    password,
                    newPassword});
        return ((bool)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginchangePassword(string user, string password, string newPassword, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("changePassword", new object[] {
                    user,
                    password,
                    newPassword}, callback, asyncState);
    }
    
    /// <remarks/>
    public bool EndchangePassword(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((bool)(results[0]));
    }
    
    /// <remarks/>
    public void changePasswordAsync(string user, string password, string newPassword) {
        this.changePasswordAsync(user, password, newPassword, null);
    }
    
    /// <remarks/>
    public void changePasswordAsync(string user, string password, string newPassword, object userState) {
        if ((this.changePasswordOperationCompleted == null)) {
            this.changePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnchangePasswordOperationCompleted);
        }
        this.InvokeAsync("changePassword", new object[] {
                    user,
                    password,
                    newPassword}, this.changePasswordOperationCompleted, userState);
    }
    
    private void OnchangePasswordOperationCompleted(object arg) {
        if ((this.changePasswordCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.changePasswordCompleted(this, new changePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://cfdi.service.ediwinws.edicom.com", ResponseNamespace="http://cfdi.service.ediwinws.edicom.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("getCfdiReturn", DataType="base64Binary")]
    public byte[] getCfdi(string user, string password, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] file) {
        object[] results = this.Invoke("getCfdi", new object[] {
                    user,
                    password,
                    file});
        return ((byte[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetCfdi(string user, string password, byte[] file, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getCfdi", new object[] {
                    user,
                    password,
                    file}, callback, asyncState);
    }
    
    /// <remarks/>
    public byte[] EndgetCfdi(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((byte[])(results[0]));
    }
    
    /// <remarks/>
    public void getCfdiAsync(string user, string password, byte[] file) {
        this.getCfdiAsync(user, password, file, null);
    }
    
    /// <remarks/>
    public void getCfdiAsync(string user, string password, byte[] file, object userState) {
        if ((this.getCfdiOperationCompleted == null)) {
            this.getCfdiOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCfdiOperationCompleted);
        }
        this.InvokeAsync("getCfdi", new object[] {
                    user,
                    password,
                    file}, this.getCfdiOperationCompleted, userState);
    }
    
    private void OngetCfdiOperationCompleted(object arg) {
        if ((this.getCfdiCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getCfdiCompleted(this, new getCfdiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://cfdi.service.ediwinws.edicom.com", ResponseNamespace="http://cfdi.service.ediwinws.edicom.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("getTimbreCfdiReturn", DataType="base64Binary")]
    public byte[] getTimbreCfdi(string user, string password, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] file) {
        object[] results = this.Invoke("getTimbreCfdi", new object[] {
                    user,
                    password,
                    file});
        return ((byte[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetTimbreCfdi(string user, string password, byte[] file, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getTimbreCfdi", new object[] {
                    user,
                    password,
                    file}, callback, asyncState);
    }
    
    /// <remarks/>
    public byte[] EndgetTimbreCfdi(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((byte[])(results[0]));
    }
    
    /// <remarks/>
    public void getTimbreCfdiAsync(string user, string password, byte[] file) {
        this.getTimbreCfdiAsync(user, password, file, null);
    }
    
    /// <remarks/>
    public void getTimbreCfdiAsync(string user, string password, byte[] file, object userState) {
        if ((this.getTimbreCfdiOperationCompleted == null)) {
            this.getTimbreCfdiOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTimbreCfdiOperationCompleted);
        }
        this.InvokeAsync("getTimbreCfdi", new object[] {
                    user,
                    password,
                    file}, this.getTimbreCfdiOperationCompleted, userState);
    }
    
    private void OngetTimbreCfdiOperationCompleted(object arg) {
        if ((this.getTimbreCfdiCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getTimbreCfdiCompleted(this, new getTimbreCfdiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://cfdi.service.ediwinws.edicom.com", ResponseNamespace="http://cfdi.service.ediwinws.edicom.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("cancelaCFDiReturn")]
    public CancelaResponse cancelaCFDi(string user, string password, string rfc, [System.Xml.Serialization.XmlElementAttribute("uuid")] string[] uuid, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] pfx, string pfxPassword) {
        object[] results = this.Invoke("cancelaCFDi", new object[] {
                    user,
                    password,
                    rfc,
                    uuid,
                    pfx,
                    pfxPassword});
        return ((CancelaResponse)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegincancelaCFDi(string user, string password, string rfc, string[] uuid, byte[] pfx, string pfxPassword, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("cancelaCFDi", new object[] {
                    user,
                    password,
                    rfc,
                    uuid,
                    pfx,
                    pfxPassword}, callback, asyncState);
    }
    
    /// <remarks/>
    public CancelaResponse EndcancelaCFDi(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((CancelaResponse)(results[0]));
    }
    
    /// <remarks/>
    public void cancelaCFDiAsync(string user, string password, string rfc, string[] uuid, byte[] pfx, string pfxPassword) {
        this.cancelaCFDiAsync(user, password, rfc, uuid, pfx, pfxPassword, null);
    }
    
    /// <remarks/>
    public void cancelaCFDiAsync(string user, string password, string rfc, string[] uuid, byte[] pfx, string pfxPassword, object userState) {
        if ((this.cancelaCFDiOperationCompleted == null)) {
            this.cancelaCFDiOperationCompleted = new System.Threading.SendOrPostCallback(this.OncancelaCFDiOperationCompleted);
        }
        this.InvokeAsync("cancelaCFDi", new object[] {
                    user,
                    password,
                    rfc,
                    uuid,
                    pfx,
                    pfxPassword}, this.cancelaCFDiOperationCompleted, userState);
    }
    
    private void OncancelaCFDiOperationCompleted(object arg) {
        if ((this.cancelaCFDiCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.cancelaCFDiCompleted(this, new cancelaCFDiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://cfdi.service.ediwinws.edicom.com", ResponseNamespace="http://cfdi.service.ediwinws.edicom.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("getCfdiTestReturn", DataType="base64Binary")]
    public byte[] getCfdiTest(string user, string password, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] file) {
        object[] results = this.Invoke("getCfdiTest", new object[] {
                    user,
                    password,
                    file});
        return ((byte[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetCfdiTest(string user, string password, byte[] file, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getCfdiTest", new object[] {
                    user,
                    password,
                    file}, callback, asyncState);
    }
    
    /// <remarks/>
    public byte[] EndgetCfdiTest(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((byte[])(results[0]));
    }
    
    /// <remarks/>
    public void getCfdiTestAsync(string user, string password, byte[] file) {
        this.getCfdiTestAsync(user, password, file, null);
    }
    
    /// <remarks/>
    public void getCfdiTestAsync(string user, string password, byte[] file, object userState) {
        if ((this.getCfdiTestOperationCompleted == null)) {
            this.getCfdiTestOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCfdiTestOperationCompleted);
        }
        this.InvokeAsync("getCfdiTest", new object[] {
                    user,
                    password,
                    file}, this.getCfdiTestOperationCompleted, userState);
    }
    
    private void OngetCfdiTestOperationCompleted(object arg) {
        if ((this.getCfdiTestCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getCfdiTestCompleted(this, new getCfdiTestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://cfdi.service.ediwinws.edicom.com", ResponseNamespace="http://cfdi.service.ediwinws.edicom.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("getTimbreCfdiTestReturn", DataType="base64Binary")]
    public byte[] getTimbreCfdiTest(string user, string password, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] file) {
        object[] results = this.Invoke("getTimbreCfdiTest", new object[] {
                    user,
                    password,
                    file});
        return ((byte[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetTimbreCfdiTest(string user, string password, byte[] file, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getTimbreCfdiTest", new object[] {
                    user,
                    password,
                    file}, callback, asyncState);
    }
    
    /// <remarks/>
    public byte[] EndgetTimbreCfdiTest(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((byte[])(results[0]));
    }
    
    /// <remarks/>
    public void getTimbreCfdiTestAsync(string user, string password, byte[] file) {
        this.getTimbreCfdiTestAsync(user, password, file, null);
    }
    
    /// <remarks/>
    public void getTimbreCfdiTestAsync(string user, string password, byte[] file, object userState) {
        if ((this.getTimbreCfdiTestOperationCompleted == null)) {
            this.getTimbreCfdiTestOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTimbreCfdiTestOperationCompleted);
        }
        this.InvokeAsync("getTimbreCfdiTest", new object[] {
                    user,
                    password,
                    file}, this.getTimbreCfdiTestOperationCompleted, userState);
    }
    
    private void OngetTimbreCfdiTestOperationCompleted(object arg) {
        if ((this.getTimbreCfdiTestCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getTimbreCfdiTestCompleted(this, new getTimbreCfdiTestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    public new void CancelAsync(object userState) {
        base.CancelAsync(userState);
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://cfdi.service.ediwinws.edicom.com")]
public partial class CancelaResponse {
    
    private string ackField;
    
    private string textField;
    
    private string[] uuidsField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public string ack {
        get {
            return this.ackField;
        }
        set {
            this.ackField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public string text {
        get {
            return this.textField;
        }
        set {
            this.textField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
    [System.Xml.Serialization.XmlArrayItemAttribute("item", IsNullable=false)]
    public string[] uuids {
        get {
            return this.uuidsField;
        }
        set {
            this.uuidsField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void changePasswordCompletedEventHandler(object sender, changePasswordCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class changePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal changePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public bool Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void getCfdiCompletedEventHandler(object sender, getCfdiCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getCfdiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getCfdiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public byte[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((byte[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void getTimbreCfdiCompletedEventHandler(object sender, getTimbreCfdiCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getTimbreCfdiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getTimbreCfdiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public byte[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((byte[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void cancelaCFDiCompletedEventHandler(object sender, cancelaCFDiCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class cancelaCFDiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal cancelaCFDiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public CancelaResponse Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((CancelaResponse)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void getCfdiTestCompletedEventHandler(object sender, getCfdiTestCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getCfdiTestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getCfdiTestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public byte[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((byte[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void getTimbreCfdiTestCompletedEventHandler(object sender, getTimbreCfdiTestCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getTimbreCfdiTestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getTimbreCfdiTestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public byte[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((byte[])(this.results[0]));
        }
    }
}
